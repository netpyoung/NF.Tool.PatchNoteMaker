<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#
    System.Diagnostics.Debugger.Launch();
    System.Diagnostics.Debugger.Break();

    TemplateModel model = Host.GetTemplateModel();
    PatchNoteConfig config = Host.GetConfig();
#>
<#
    if (model.IsRenderTitle)
    {
        WriteLine($"# {model.VersionData}\n");
    }
#>
<#
    foreach ((string sectionName, Section section) in model.SectionDic)
    {
        WriteLine($"## {sectionName}\n");

        if (section.Count == 0)
        {
            WriteLine("No significant changes.\n");
            continue;
        }

        foreach (string category in section.Keys)
        {
            if (!model.DefinitionDic.ContainsKey(category))
            {
                continue;
            }
            
            var categoryDefinition = model.DefinitionDic[category];
            WriteLine($"### {categoryDefinition.Name}\n");

            if (section[category].Count == 0)
            {
                WriteLine("No significant changes.\n");
                continue;
            }

            foreach (string text in section[category].Keys)
            {
                WriteLine($"- {text}");
                List<string> values = section[category][text];
                if (values.Count > 0)
                {
                    if (text.Contains("\n  - ") || text.Contains("\n  * "))
                    {
                        WriteLine("\n\n  (");
                    }
                    else
                    {
                        WriteLine(" (");
                    }
                        
                    for (int i = 0; i < values.Count; i++)
                    {
                        Write(values[i].Split(": ", 2)[0]);
                        if (i < values.Count - 1)
                        {
                            Write(", ");
                        }
                    }
                    if (!text.Contains("\n  - ") && !text.Contains("\n  * "))
                    {
                        WriteLine(")");
                    }
                }

                if (model.IssuesByCategory.ContainsKey(sectionName) && model.IssuesByCategory[sectionName].ContainsKey(category) && model.IssuesByCategory[sectionName][category].Any())
                {
                    foreach (var issue in model.IssuesByCategory[sectionName][category])
                    {
                        WriteLine(issue);
                    }
                }
            }
        }
    }
#>